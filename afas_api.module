<?php

/**
 * @file 
 * Functions for connecting to AFAS SOAP service.
 */

// Constants used by the connection classes are defined here, so they are
// recognized in external code without having to explicitly include the class
// file. (Because Drupal 7 autoload is built to not include things explicitly.)

/**
 * Errors reported by the AFAS endpoint or this code are logged to watchdog.
 */
const AFAS_LOG_ERRORS_WATCHDOG = 1;

/**
 * Errors reported by the AFAS endpoint or this code are output to the screen
 * using drupal_set_message().
 */
const AFAS_LOG_ERRORS_SCREEN = 2;

/**
 * Verbose error details reported by the AFAS endpoint or this code are logged
 * to watchdog. This implies AFAS_LOG_ERRORS_WATCHDOG.
 */
const AFAS_LOG_ERROR_DETAILS_WATCHDOG = 4;

/**
 * Verbose error details reported by the AFAS endpoint or this code are output
 * to the screen using drupal_set_message(). Implies AFAS_LOG_ERRORS_SCREEN.
 */
const AFAS_LOG_ERROR_DETAILS_SCREEN = 8;

/**
 * Implements hook_menu().
 */
function afas_api_menu() {
  $menu = array();
  // Configuration.
  $menu['admin/config/services/afas'] = array(
    'title' => 'AFAS',
    'description' => 'AFAS related Configuration.',
    'position' => 'right',
    'weight' => -8,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('synchronize afas products'),
    'file' => 'system.admin.inc',
    'file path' => 'modules/system',
  );
  $menu['admin/config/services/afas/general'] = array(
    'title' => 'General configuration',
    'description' => 'General AFAS related settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('afas_api_settings_form'),
    'access arguments' => array('synchronize afas products'),
    'file' => 'afas_api.admin.inc',
    'weight' => 1,
  );
  $menu['admin/config/services/afas/schema'] = array(
    'title' => 'Check XSD',
    'description' => 'Check XML schema definitions for AFAS calls',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('afas_api_schema_form'),
    'access arguments' => array('synchronize afas products'),
    'file' => 'afas_api.admin.inc',
    'weight' => 9,
  );
  return $menu;
}

/**
 * Implements hook_libraries_info().
 */
function afas_api_libraries_info() {
  return array(
    // Make sure the directory name libraries/nusoap is lowercased...
    'nusoap' => array(
      'name' => 'NuSOAP',
      'vendor url' => 'http://sourceforge.net/projects/nusoap/',
      'download url' => 'http://sourceforge.net/projects/nusoap/',
      'version arguments' => array(
        'file' => 'lib/nusoap.php',
        'pattern' => '/\$Id: nusoap.php,v (.*)/',
        'lines' => 50,
      ),
      'files' => array(
        'php' => array(
          'lib/nusoap.php',
          'lib/class.wsdlcache.php',
        ),
      ),
    ),
  );
}

/**
 * Implements hook_queue_info().
 */
function afas_api_queue_info() {
  $queues = array();

  // This requires batchqueue module. See admin/config/system/batchqueue.
  $queues['afas_getconnector_display'] = array(
    'title'      => t('Fetch/display/export data from GetConnector (no processing).'),
    'batchqueue' => array(
      'class'         => 'AfasGetConnectorDisplay',
      'cron_disable' => TRUE,
    ),
  );

  return $queues;
}
